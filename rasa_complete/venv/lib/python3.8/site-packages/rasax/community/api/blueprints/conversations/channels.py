from sanic import Blueprint, response
from sanic.request import Request
from sanic.response import HTTPResponse

from rasax.community.api.decorators import rasa_x_scoped
from rasax.community.services.event_service import EventService


def _event_service(request: Request) -> EventService:
    return EventService(request.ctx.db_session)


def blueprint() -> Blueprint:
    channel_endpoints = Blueprint("conversation_channels_endpoints")

    @channel_endpoints.route("/conversations/inputChannels", methods=["GET", "HEAD"])
    @rasa_x_scoped("conversationInputChannels.list")
    async def list_input_channels(request: Request) -> HTTPResponse:
        """Return a list of all input channels used in stored conversations.

        Args:
            request: Incoming HTTP request.

        Returns:
            JSON response with list of conversation input channels.
        """
        channels = _event_service(request).get_unique_input_channels()
        return response.json(channels, headers={"X-Total-Count": len(channels)})

    return channel_endpoints
