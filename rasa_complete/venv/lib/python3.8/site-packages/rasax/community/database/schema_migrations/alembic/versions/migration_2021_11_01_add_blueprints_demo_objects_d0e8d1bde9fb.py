"""Add Blueprints demo objects.

Reason:
Add demo Flow with elements, Dialogue with items, and a Link.

Revision ID: d0e8d1bde9fb
Revises: e9d525b27748

"""
import json
import logging
from datetime import datetime, timedelta

from alembic import op
import sqlalchemy as sa

import rasax.community.database.schema_migrations.alembic.utils as migration_utils


# revision identifiers, used by Alembic.
revision = "d0e8d1bde9fb"
down_revision = "e9d525b27748"
branch_labels = None
depends_on = None

logger = logging.getLogger(__name__)

FLOW_NAME = "Demo - upgrade cell plan"
FLOW_DESCRIPTION = "This is a Demo created by Rasa"
FLOW_ELEMENTS = [
    {
        "source": "9af605ca-5825-4433-9d71-8aab9422e090",
        "sourceHandle": "3",
        "target": "9878023d-53a1-479d-adf4-2a90e927d68d",
        "targetHandle": "1",
        "type": "editable",
        "id": "2fac767b-c3c1-45ca-92ed-3b061597ca3d",
        "data": {
            "id": "2fac767b-c3c1-45ca-92ed-3b061597ca3d",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "id": "e695086d-f8ae-44ff-bbd3-7bbefd19debd",
        "type": "editable",
        "data": {
            "id": "e695086d-f8ae-44ff-bbd3-7bbefd19debd",
            "value": "Is customer logged in?",
            "color": {
                "hexValue": "#FFD036",
                "name": "Gold",
                "complement": {"hexValue": "#252D40", "name": "Complement to Gold"},
            },
            "element_type": "node",
            "shape": "diamond",
            "size": {"width": 135, "height": 135},
        },
        "position": {"x": 232, "y": 518},
    },
    {
        "source": "edc76e91-d643-429e-8df9-94aebcacf26e",
        "sourceHandle": "3",
        "target": "da5ca2a0-4ff3-43d1-b963-bee2ba71c5df",
        "targetHandle": "2",
        "type": "editable",
        "id": "6e30af11-aa6a-4dc8-ae0c-53bfab63e31e",
        "data": {
            "id": "6e30af11-aa6a-4dc8-ae0c-53bfab63e31e",
            "value": "Success",
            "element_type": "edge",
        },
    },
    {
        "source": "edc76e91-d643-429e-8df9-94aebcacf26e",
        "sourceHandle": "1",
        "target": "3842b0fd-6e0f-4fe9-ae79-c5c260d2dfed",
        "targetHandle": "2",
        "type": "editable",
        "id": "881fd853-6d1e-4723-9e46-ede648d341bd",
        "data": {
            "id": "881fd853-6d1e-4723-9e46-ede648d341bd",
            "value": "Fail",
            "element_type": "edge",
        },
    },
    {
        "id": "9af605ca-5825-4433-9d71-8aab9422e090",
        "type": "editable",
        "data": {
            "id": "9af605ca-5825-4433-9d71-8aab9422e090",
            "value": "Jump to agree to T&C flow",
            "color": {
                "hexValue": "#2C3951",
                "name": "Dark gray",
                "complement": {
                    "hexValue": "#FFFFFF",
                    "name": "Complement to Dark gray",
                },
            },
            "element_type": "node",
            "shape": "circle",
            "size": {"height": 124, "width": 126},
        },
        "position": {"x": 236, "y": 1386},
    },
    {
        "id": "6b393af1-8146-411e-9db9-8072aabb920c",
        "type": "editable",
        "data": {
            "id": "6b393af1-8146-411e-9db9-8072aabb920c",
            "value": "Entry point: Select a plan",
            "color": {
                "hexValue": "#2C3951",
                "name": "Dark gray",
                "complement": {
                    "hexValue": "#FFFFFF",
                    "name": "Complement to Dark gray",
                },
            },
            "element_type": "node",
            "shape": "circle",
            "size": {"height": 118, "width": 121},
        },
        "position": {"x": 239, "y": 125},
    },
    {
        "id": "edc76e91-d643-429e-8df9-94aebcacf26e",
        "type": "editable",
        "data": {
            "id": "edc76e91-d643-429e-8df9-94aebcacf26e",
            "value": "Submit order",
            "color": {
                "hexValue": "#FFD036",
                "name": "Gold",
                "complement": {"hexValue": "#252D40", "name": "Complement to Gold"},
            },
            "element_type": "node",
            "shape": "diamond",
            "size": {"width": 135, "height": 135},
        },
        "position": {"x": 1077, "y": 469},
    },
    {
        "id": "da5ca2a0-4ff3-43d1-b963-bee2ba71c5df",
        "type": "editable",
        "data": {
            "id": "da5ca2a0-4ff3-43d1-b963-bee2ba71c5df",
            "value": "Upgrade completed",
            "color": {
                "hexValue": "#2C3951",
                "name": "Dark gray",
                "complement": {
                    "hexValue": "#FFFFFF",
                    "name": "Complement to Dark gray",
                },
            },
            "element_type": "node",
            "shape": "circle",
            "size": {"height": 130, "width": 126},
        },
        "position": {"x": 1218, "y": 752},
    },
    {
        "id": "3842b0fd-6e0f-4fe9-ae79-c5c260d2dfed",
        "type": "editable",
        "data": {
            "id": "3842b0fd-6e0f-4fe9-ae79-c5c260d2dfed",
            "value": "Transfer to human",
            "color": {
                "hexValue": "#2C3951",
                "name": "Dark gray",
                "complement": {
                    "hexValue": "#FFFFFF",
                    "name": "Complement to Dark gray",
                },
            },
            "element_type": "node",
            "shape": "circle",
            "size": {"height": 128, "width": 127},
        },
        "position": {"x": 940, "y": 753},
    },
    {
        "source": "9878023d-53a1-479d-adf4-2a90e927d68d",
        "sourceHandle": "4",
        "target": "691c260f-171c-4eae-a257-86f038ceb2dc",
        "targetHandle": "2",
        "type": "editable",
        "id": "d8b87c86-3e66-440b-9a5a-b34580bbb299",
        "data": {
            "id": "d8b87c86-3e66-440b-9a5a-b34580bbb299",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "source": "4828824f-3251-4650-b324-752216355050",
        "sourceHandle": "4",
        "target": "afcd4ad8-38cb-44b9-8d5e-c0c3c19fe293",
        "targetHandle": "2",
        "type": "editable",
        "id": "d0252131-b54b-43da-a46e-0ea90b07eb5f",
        "data": {
            "id": "d0252131-b54b-43da-a46e-0ea90b07eb5f",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "source": "6b393af1-8146-411e-9db9-8072aabb920c",
        "sourceHandle": "4",
        "target": "a7f73396-ae2d-4260-bf6c-7e3f646b9218",
        "targetHandle": "2",
        "type": "editable",
        "id": "a03cdd16-fc79-4685-b41c-eaa8b2fc333e",
        "data": {
            "id": "a03cdd16-fc79-4685-b41c-eaa8b2fc333e",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "source": "a7f73396-ae2d-4260-bf6c-7e3f646b9218",
        "sourceHandle": "4",
        "target": "e695086d-f8ae-44ff-bbd3-7bbefd19debd",
        "targetHandle": "2",
        "type": "editable",
        "id": "b185e296-eb93-4b4b-9f2d-f5c049041ff3",
        "data": {
            "id": "b185e296-eb93-4b4b-9f2d-f5c049041ff3",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "source": "5830408e-2fbe-4054-a872-9e7ef045ecbe",
        "sourceHandle": "4",
        "target": "a8ade497-66f2-454b-81d9-6a29945f802b",
        "targetHandle": "2",
        "type": "editable",
        "id": "7e59ea8c-62a2-47dd-8d56-69398f579722",
        "data": {
            "id": "7e59ea8c-62a2-47dd-8d56-69398f579722",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "source": "0fd9c8ea-7e3d-4dd0-9c79-0552bd3a5f47",
        "sourceHandle": "4",
        "target": "9af605ca-5825-4433-9d71-8aab9422e090",
        "targetHandle": "2",
        "type": "editable",
        "id": "60084a7a-d306-4899-82d5-abf17728ba31",
        "data": {
            "id": "60084a7a-d306-4899-82d5-abf17728ba31",
            "value": "",
            "element_type": "edge",
        },
    },
    {
        "source": "e695086d-f8ae-44ff-bbd3-7bbefd19debd",
        "sourceHandle": "4",
        "target": "5830408e-2fbe-4054-a872-9e7ef045ecbe",
        "targetHandle": "2",
        "type": "editable",
        "id": "49f093e3-18aa-4347-91f2-e0174ab59bcf",
        "data": {
            "id": "49f093e3-18aa-4347-91f2-e0174ab59bcf",
            "value": "Yes",
            "element_type": "edge",
        },
    },
    {
        "source": "e695086d-f8ae-44ff-bbd3-7bbefd19debd",
        "sourceHandle": "1",
        "target": "fc439f24-d61d-4692-a8b5-e265a8c101c9",
        "targetHandle": "2",
        "type": "editable",
        "id": "3eaae6cf-ddb6-4846-ba40-0b0939fa766b",
        "data": {
            "id": "3eaae6cf-ddb6-4846-ba40-0b0939fa766b",
            "value": "No",
            "element_type": "edge",
        },
    },
    {
        "source": "fc439f24-d61d-4692-a8b5-e265a8c101c9",
        "sourceHandle": "4",
        "target": "5830408e-2fbe-4054-a872-9e7ef045ecbe",
        "targetHandle": "1",
        "type": "editable",
        "id": "9f054220-68c1-4bc0-8b5c-a039d3e9b381",
        "data": {
            "id": "9f054220-68c1-4bc0-8b5c-a039d3e9b381",
            "value": "Logged in",
            "element_type": "edge",
        },
    },
    {
        "source": "a8ade497-66f2-454b-81d9-6a29945f802b",
        "sourceHandle": "4",
        "target": "0fd9c8ea-7e3d-4dd0-9c79-0552bd3a5f47",
        "targetHandle": "2",
        "type": "editable",
        "id": "498d6447-b935-41dc-a8b9-37f7cc0a1670",
        "data": {
            "id": "498d6447-b935-41dc-a8b9-37f7cc0a1670",
            "value": "Plan selected",
            "element_type": "edge",
        },
    },
    {
        "source": "691c260f-171c-4eae-a257-86f038ceb2dc",
        "sourceHandle": "1",
        "target": "4828824f-3251-4650-b324-752216355050",
        "targetHandle": "2",
        "type": "editable",
        "id": "d04c90c3-2c61-4ae6-b141-fa28bc09f5ff",
        "data": {
            "id": "d04c90c3-2c61-4ae6-b141-fa28bc09f5ff",
            "value": "No",
            "element_type": "edge",
        },
    },
    {
        "source": "4828824f-3251-4650-b324-752216355050",
        "sourceHandle": "3",
        "target": "691c260f-171c-4eae-a257-86f038ceb2dc",
        "targetHandle": "4",
        "type": "editable",
        "id": "b995c526-8e23-41e3-b20e-8cebc82b27b8",
        "data": {
            "id": "b995c526-8e23-41e3-b20e-8cebc82b27b8",
            "value": "No",
            "element_type": "edge",
        },
    },
    {
        "source": "691c260f-171c-4eae-a257-86f038ceb2dc",
        "sourceHandle": "3",
        "target": "edc76e91-d643-429e-8df9-94aebcacf26e",
        "targetHandle": "2",
        "type": "editable",
        "id": "478ea822-20ce-4be7-9a03-928ab17ad18f",
        "data": {
            "id": "478ea822-20ce-4be7-9a03-928ab17ad18f",
            "value": "Yes",
            "element_type": "edge",
        },
    },
    {
        "id": "9878023d-53a1-479d-adf4-2a90e927d68d",
        "type": "editable",
        "data": {
            "id": "9878023d-53a1-479d-adf4-2a90e927d68d",
            "value": "Entry point: Agree to T&C",
            "color": {
                "hexValue": "#2C3951",
                "name": "Dark gray",
                "complement": {
                    "hexValue": "#FFFFFF",
                    "name": "Complement to Dark gray",
                },
            },
            "element_type": "node",
            "shape": "circle",
            "size": {"height": 120, "width": 125},
        },
        "position": {"x": 868, "y": 125},
    },
    {
        "id": "afcd4ad8-38cb-44b9-8d5e-c0c3c19fe293",
        "type": "editable",
        "data": {
            "id": "afcd4ad8-38cb-44b9-8d5e-c0c3c19fe293",
            "value": "End",
            "color": {
                "hexValue": "#2C3951",
                "name": "Dark gray",
                "complement": {
                    "hexValue": "#FFFFFF",
                    "name": "Complement to Dark gray",
                },
            },
            "element_type": "node",
            "shape": "circle",
            "size": {"height": 125, "width": 129},
        },
        "position": {"x": 682, "y": 750},
    },
    {
        "id": "691c260f-171c-4eae-a257-86f038ceb2dc",
        "type": "editable",
        "data": {
            "id": "691c260f-171c-4eae-a257-86f038ceb2dc",
            "value": "Ask customer to agree to T&C",
            "color": {
                "hexValue": "#94C6FF",
                "name": "Cornflower",
                "complement": {
                    "hexValue": "#252D40",
                    "name": "Complement to Cornflower",
                },
            },
            "element_type": "node",
            "shape": "rounded",
            "size": {"height": 95, "width": 183},
        },
        "position": {"x": 839, "y": 332},
    },
    {
        "id": "a7f73396-ae2d-4260-bf6c-7e3f646b9218",
        "type": "editable",
        "data": {
            "id": "a7f73396-ae2d-4260-bf6c-7e3f646b9218",
            "value": "Customer wants to upgrade cell phone plan.",
            "color": {
                "hexValue": "#87E5E2",
                "name": "Cyan",
                "complement": {"hexValue": "#252D40", "name": "Complement to Cyan"},
            },
            "element_type": "node",
            "shape": "rounded",
            "size": {"height": 95, "width": 183},
        },
        "position": {"x": 208, "y": 331},
    },
    {
        "id": "fc439f24-d61d-4692-a8b5-e265a8c101c9",
        "type": "editable",
        "data": {
            "id": "fc439f24-d61d-4692-a8b5-e265a8c101c9",
            "value": "Log in flow (Website)",
            "color": {
                "hexValue": "#CED5E7",
                "name": "Mid gray",
                "complement": {"hexValue": "#252D40", "name": "Complement to Mid gray"},
            },
            "element_type": "node",
            "shape": "rectangle",
            "size": {"height": 91, "width": 181},
        },
        "position": {"x": -84, "y": 671},
    },
    {
        "id": "a8ade497-66f2-454b-81d9-6a29945f802b",
        "type": "editable",
        "data": {
            "id": "a8ade497-66f2-454b-81d9-6a29945f802b",
            "value": "Compare plan page (Website)",
            "color": {
                "hexValue": "#CED5E7",
                "name": "Mid gray",
                "complement": {"hexValue": "#252D40", "name": "Complement to Mid gray"},
            },
            "element_type": "node",
            "shape": "rectangle",
            "size": {"height": 93, "width": 182},
        },
        "position": {"x": 208, "y": 976},
    },
    {
        "id": "0fd9c8ea-7e3d-4dd0-9c79-0552bd3a5f47",
        "type": "editable",
        "data": {
            "id": "0fd9c8ea-7e3d-4dd0-9c79-0552bd3a5f47",
            "value": "Ask customer to confirm the selected <plan_name> and <price>",
            "color": {
                "hexValue": "#94C6FF",
                "name": "Cornflower",
                "complement": {
                    "hexValue": "#252D40",
                    "name": "Complement to Cornflower",
                },
            },
            "element_type": "node",
            "shape": "rounded",
            "size": {"height": 97, "width": 188},
        },
        "position": {"x": 205, "y": 1200},
    },
    {
        "id": "5830408e-2fbe-4054-a872-9e7ef045ecbe",
        "type": "editable",
        "data": {
            "id": "5830408e-2fbe-4054-a872-9e7ef045ecbe",
            "value": "Ask customer to select a plan",
            "color": {
                "hexValue": "#94C6FF",
                "name": "Cornflower",
                "complement": {
                    "hexValue": "#252D40",
                    "name": "Complement to Cornflower",
                },
            },
            "element_type": "node",
            "shape": "rounded",
            "size": {"height": 98, "width": 182},
        },
        "position": {"x": 208, "y": 783},
    },
    {
        "id": "4828824f-3251-4650-b324-752216355050",
        "type": "editable",
        "data": {
            "id": "4828824f-3251-4650-b324-752216355050",
            "value": "Confirm customer wants to cancel order",
            "color": {
                "hexValue": "#94C6FF",
                "name": "Cornflower",
                "complement": {
                    "hexValue": "#252D40",
                    "name": "Complement to Cornflower",
                },
            },
            "element_type": "node",
            "shape": "rounded",
            "size": {"height": 93, "width": 183},
        },
        "position": {"x": 655, "y": 495},
    },
]

DIALOGUE_NAME = "Demo - select a plan"
DIALOGUE_DESCRIPTION = "A customer is talking to the bot while selecting a plan on the website. Bot captures data from the website."
DIALOGUE_ITEMS = [
    {"type": "user_message", "text": "I want to upgrade my cell phone plan.",},
    {
        "type": "bot_message",
        "text": "Sure thing! Please log in first. www.rasa-telecommunications.com/login",
    },
    {
        "type": "bot_message",
        "text": "Now, you can select the new plan here:  www.rasa-telecommunications.com/plan",
    },
    {
        "type": "bot_message",
        "text": "Great choice! I\u2019m confirming you want  to upgrade to Rasa Phone XL plan. It will be \u20ac29/month.",
    },
    {"type": "bot_message", "text": "Is the above information correct?",},
    {"type": "user_message", "text": "Yes!",},
    {
        "type": "bot_message",
        "text": "Awesome! Do you agree to  our Terms & Conditions <link> ?",
    },
    {"type": "user_message", "text": "Yes, I agree.",},
    {
        "type": "bot_message",
        "text": "Thank you for your purchase.  Your order was successfully processed.",
    },
    {"type": "bot_message", "text": "Your new plan will start from next week.",},
    {"type": "bot_message", "text": "Anything else I can help you with?",},
    {"type": "user_message", "text": "All fine. Bye!",},
    {"type": "bot_message", "text": "Great! Have a lovely day.",},
]


def upgrade():
    """Upgrade database."""
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)
    is_sqlite = migration_utils.using_dialect(
        migration_utils.SQLITE_DIALECT, op.get_bind()
    )
    timestamp = datetime.utcnow()

    flow_tbl = migration_utils.get_reflected_table("business_logic_flow", session)
    flow_id_seq = sa.Sequence("blf_seq")

    flow_element_tbl = migration_utils.get_reflected_table(
        "business_logic_flow_element", session
    )
    flow_element_id_seq = sa.Sequence("blf_element_seq")

    dialogue_tbl = migration_utils.get_reflected_table("example_conversation", session)
    dialogue_id_seq = sa.Sequence("sc_seq")

    dialogue_items_tbl = migration_utils.get_reflected_table(
        "example_conversation_item", session
    )
    dialogue_items_id_seq = sa.Sequence("sc_item_seq")

    link_tbl = migration_utils.get_reflected_table("assistant_link", session)
    link_id_seq = sa.Sequence("link_seq")

    existing_flow = (
        session.execute(
            sa.select(sa.func.count()).where(flow_tbl.c.name == FLOW_NAME)
        ).first()[0]
        > 0
    )
    existing_dialogue = (
        session.execute(
            sa.select(sa.func.count()).where(dialogue_tbl.c.name == DIALOGUE_NAME)
        ).first()[0]
        > 0
    )

    if existing_flow or existing_dialogue:
        logger.debug(
            "Skip creating Blueprints demo objects, flow or dialogue with same names already exist."
        )
        return

    # Create flow with elements
    values = {
        "name": FLOW_NAME,
        "description": FLOW_DESCRIPTION,
        "created_at": timestamp,
        "updated_at": timestamp,
    }
    if not is_sqlite:
        values["id"] = flow_id_seq.next_value()
    session.execute(sa.insert(flow_tbl).values(**values))
    flow_id = session.execute(
        sa.select(flow_tbl.c.id).where(flow_tbl.c.name == FLOW_NAME)
    ).first()[0]

    for element in FLOW_ELEMENTS:
        values = {
            "type": element["data"]["element_type"],
            "element_id": element["id"],
            "data": json.dumps(element),
            "business_logic_flow_id": flow_id,
            "created_at": timestamp,
            "updated_at": timestamp,
        }
        if not is_sqlite:
            values["id"] = flow_element_id_seq.next_value()
        session.execute(sa.insert(flow_element_tbl).values(**values))

    # Create dialogue with items
    values = {
        "name": DIALOGUE_NAME,
        "description": DIALOGUE_DESCRIPTION,
        "created_at": timestamp,
        "updated_at": timestamp,
    }
    if not is_sqlite:
        values["id"] = dialogue_id_seq.next_value()
    session.execute(sa.insert(dialogue_tbl).values(**values))
    dialogue_id = session.execute(
        sa.select(dialogue_tbl.c.id).where(dialogue_tbl.c.name == DIALOGUE_NAME)
    ).first()[0]

    for idx, item in enumerate(DIALOGUE_ITEMS):
        item_timestamp = timestamp + timedelta(seconds=idx)
        values = {
            "type": item["type"],
            "text": item["text"],
            "example_conversation_id": dialogue_id,
            "created_at": item_timestamp,
            "updated_at": item_timestamp,
        }
        if not is_sqlite:
            values["id"] = dialogue_items_id_seq.next_value()
        session.execute(sa.insert(dialogue_items_tbl).values(**values))

    # Create link between flow and dialogue
    values = {
        "business_logic_flow_id": flow_id,
        "example_conversation_id": dialogue_id,
        "created_at": timestamp,
        "updated_at": timestamp,
    }
    if not is_sqlite:
        values["id"] = link_id_seq.next_value()
    session.execute(sa.insert(link_tbl).values(**values))


def downgrade():
    """Downgrade database."""
    bind = op.get_bind()
    session = sa.orm.Session(bind=bind)

    # Delete Flow, its elements are automatically deleted
    flow_tbl = migration_utils.get_reflected_table("business_logic_flow", session)
    session.execute(sa.delete(flow_tbl).where(flow_tbl.c.name == FLOW_NAME))

    # Delete Dialogue, its items are automatically deleted
    dialogue_tbl = migration_utils.get_reflected_table("example_conversation", session)
    session.execute(sa.delete(dialogue_tbl).where(dialogue_tbl.c.name == DIALOGUE_NAME))
